0x08048791: adc al, 0x41; ret; 
0x080484de: adc al, 0x50; call edx; 
0x08048599: add al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x08048590: add al, 8; call 0x3b0; add esp, 4; mov eax, 0; leave; ret; 
0x08048451: add al, 8; call eax; 
0x0804848b: add al, 8; call edx; 
0x0804860f: add bl, dh; ret; 
0x0804859b: add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x0804859c: add byte ptr [eax], al; add cl, cl; ret; 
0x08048374: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0804859d: add byte ptr [eax], al; leave; ret; 
0x08048357: add byte ptr [ebx - 0x7d], dl; in al, dx; or al, ch; mov edi, 0x81000000; ret; 
0x0804859e: add cl, cl; ret; 
0x080484fc: add edx, 1; ret; 
0x08048531: add esp, 0xc; mov ecx, esp; nop; leave; ret; 
0x08048605: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08048597: add esp, 4; mov eax, 0; leave; ret; 
0x08048376: add esp, 8; pop ebx; ret; 
0x0804878e: and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x0804852c: call 0x3a0; add esp, 0xc; mov ecx, esp; nop; leave; ret; 
0x08048592: call 0x3b0; add esp, 4; mov eax, 0; leave; ret; 
0x08048371: call 0x3e0; add esp, 8; pop ebx; ret; 
0x080484ea: call dword ptr [ebp - 0x77]; 
0x08048453: call eax; 
0x0804848d: call edx; 
0x0804878c: dec ebp; push cs; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080484dd: in al, dx; adc al, 0x50; call edx; 
0x0804835a: in al, dx; or al, ch; mov edi, 0x81000000; ret; 
0x080484db: in eax, 0x83; in al, dx; adc al, 0x50; call edx; 
0x0804836c: inc dword ptr [ebp - 0x17fa8b40]; push 0; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08048596: inc dword ptr [ebx + 0xb804c4]; add byte ptr [eax], al; add cl, cl; ret; 
0x08048530: inc dword ptr [ebx - 0x1e76f33c]; nop; leave; ret; 
0x08048789: inc ecx; push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x08048792: inc ecx; ret; 
0x0804878f: inc edi; push cs; adc al, 0x41; ret; 
0x08048505: inc edx; ret; 
0x080484f2: int 0x80; 
0x080484f2: int 0x80; ret;
0x0804836f: je 0x376; call 0x3e0; add esp, 8; pop ebx; ret; 
0x08048446: je 0x459; push ebp; mov ebp, esp; sub esp, 0x14; push 0x804a028; call eax; 
0x080484d7: je 0x4cb; push ebp; mov ebp, esp; sub esp, 0x14; push eax; call edx; 
0x08048604: jecxz 0x589; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0804861f: jecxz 0x63a; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x080486df: jmp dword ptr [eax]; 
0x08048598: les eax, ptr [eax + edi*4]; add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x08048377: les ecx, ptr [eax]; pop ebx; ret; 
0x08048606: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08048532: les ecx, ptr [ecx + ecx*4]; loope 0x4c7; leave; ret; 
0x08048535: loope 0x4c7; leave; ret; 
0x0804859a: mov eax, 0; leave; ret; 
0x080484f9: mov eax, ecx; ret; 
0x08048500: mov eax, edx; mov ebx, edx; ret; 
0x08048482: mov ebp, esp; sub esp, 0x10; push eax; push 0x804a028; call edx; 
0x08048449: mov ebp, esp; sub esp, 0x14; push 0x804a028; call eax; 
0x080484da: mov ebp, esp; sub esp, 0x14; push eax; call edx; 
0x080484ec: mov ebp, esp; ret; 
0x08048420: mov ebx, dword ptr [esp]; ret; 
0x08048502: mov ebx, edx; ret; 
0x08048534: mov ecx, esp; nop; leave; ret; 
0x0804835d: mov edi, 0x81000000; ret; 
0x08048607: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08048533: or al, 0x89; loope 0x4c7; leave; ret; 
0x0804835b: or al, ch; mov edi, 0x81000000; ret; 
0x08048452: or bh, bh; rol byte ptr [ebx - 0xc36ef3c], 1; ret; 
0x0804848c: or bh, bh; rol byte ptr [ebx - 0xc36ef3c], cl; ret; 
0x08048508: pop ebp; ret; 
0x08048608: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08048379: pop ebx; ret; 
0x0804860a: pop edi; pop ebp; ret; 
0x08048609: pop esi; pop edi; pop ebp; ret; 
0x08048372: push 0; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0804844e: push 0x804a028; call eax; 
0x08048488: push 0x804a028; call edx; 
0x08048790: push cs; adc al, 0x41; ret; 
0x0804878d: push cs; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x0804878a: push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080484df: push eax; call edx; 
0x08048487: push eax; push 0x804a028; call edx; 
0x08048481: push ebp; mov ebp, esp; sub esp, 0x10; push eax; push 0x804a028; call edx; 
0x08048448: push ebp; mov ebp, esp; sub esp, 0x14; push 0x804a028; call eax; 
0x080484d9: push ebp; mov ebp, esp; sub esp, 0x14; push eax; call edx; 
0x080484eb: push ebp; mov ebp, esp; ret; 
0x080484fd: ret 0xc301; 
0x0804846e: ret 0xeac1; 
0x080484f0: rol bl, cl; int 0x80; 
0x08048454: rol byte ptr [ebx - 0xc36ef3c], 1; ret; 
0x0804848e: rol byte ptr [ebx - 0xc36ef3c], cl; ret; 
0x080484d6: sal byte ptr [edx + esi*8 + 0x55], cl; mov ebp, esp; sub esp, 0x14; push eax; call edx; 
0x08048421: sbb al, 0x24; ret; 
0x08048788: sub al, 0x41; push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080484f5: sub ecx, 4; ret;
0x08048484: sub esp, 0x10; push eax; push 0x804a028; call edx; 
0x0804844b: sub esp, 0x14; push 0x804a028; call eax; 
0x080484dc: sub esp, 0x14; push eax; call edx; 
0x0804836d: test eax, eax; je 0x376; call 0x3e0; add esp, 8; pop ebx; ret; 
0x0804858f: xchg byte ptr [eax + ecx], al; call 0x3b0; add esp, 4; mov eax, 0; leave; ret; 
0x0804878b: xor byte ptr [ebp + 0xe], cl; and byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080484ef: xor edx, edx; ret; 
0x08048537: leave; ret;
0x0804841f: nop; mov ebx, dword ptr [esp]; ret; 
0x08048507: nop; pop ebp; ret; 
0x08048536: nop; leave; ret;
0x0804841d: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0804841b: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x08048419: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x08048362: ret; 

106 gadgets found
